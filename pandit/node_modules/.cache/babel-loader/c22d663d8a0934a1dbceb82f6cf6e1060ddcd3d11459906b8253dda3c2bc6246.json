{"ast":null,"code":"// src/api/api.js\nimport axios from 'axios';\n\n// Create axios instance with base URL\nconst API = axios.create({\n  baseURL: 'http://localhost:5000/api'\n});\n\n// Automatically attach token to requests\nAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// ==================== Auth ====================\nexport const signup = userData => API.post('/users/add', userData);\nexport const login = userData => API.post('/users/login', userData);\nexport const getUsers = () => API.get('/users/view');\n\n// ==================== Bookings ====================\nexport const createBooking = bookingData => API.post('/bookings/create', bookingData);\nexport const getBookings = () => API.get('/bookings/view');\n\n// ==================== Services ====================\nexport const getServices = () => API.get('/services');\n\n// ==================== Notifications ====================\nexport const getNotifications = () => API.get('/notifications');\nexport const markNotificationAsRead = id => API.put(`/notifications/${id}`);\n\n// ==================== Payments ====================\nexport const createPayment = paymentData => API.post('/payments', paymentData);\nexport const getPayments = () => API.get('/payments');\n\n// ==================== Reviews ====================\nexport const createReview = reviewData => API.post('/reviews/submit', reviewData);\nexport const getReviews = () => API.get('/reviews/view');\nexport const deleteReview = id => API.delete(`/reviews/${id}`);","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","signup","userData","post","login","getUsers","get","createBooking","bookingData","getBookings","getServices","getNotifications","markNotificationAsRead","id","put","createPayment","paymentData","getPayments","createReview","reviewData","getReviews","deleteReview","delete"],"sources":["C:/Users/HP/OneDrive/Documents/project/pandit/src/api/api.js"],"sourcesContent":["// src/api/api.js\r\nimport axios from 'axios';\r\n\r\n// Create axios instance with base URL\r\nconst API = axios.create({\r\n  baseURL: 'http://localhost:5000/api',\r\n});\r\n\r\n// Automatically attach token to requests\r\nAPI.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// ==================== Auth ====================\r\nexport const signup = (userData) => API.post('/users/add', userData);\r\nexport const login = (userData) => API.post('/users/login', userData);\r\nexport const getUsers = () => API.get('/users/view');\r\n\r\n// ==================== Bookings ====================\r\nexport const createBooking = (bookingData) => API.post('/bookings/create', bookingData);\r\nexport const getBookings = () => API.get('/bookings/view');\r\n\r\n// ==================== Services ====================\r\nexport const getServices = () => API.get('/services');\r\n\r\n// ==================== Notifications ====================\r\nexport const getNotifications = () => API.get('/notifications');\r\nexport const markNotificationAsRead = (id) => API.put(`/notifications/${id}`);\r\n\r\n// ==================== Payments ====================\r\nexport const createPayment = (paymentData) => API.post('/payments', paymentData);\r\nexport const getPayments = () => API.get('/payments');\r\n\r\n// ==================== Reviews ====================\r\nexport const createReview = (reviewData) => API.post('/reviews/submit', reviewData);\r\nexport const getReviews = () => API.get('/reviews/view');\r\nexport const deleteReview = (id) => API.delete(`/reviews/${id}`);\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAM,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;;AAED;AACA,OAAO,MAAMG,MAAM,GAAIC,QAAQ,IAAKhB,GAAG,CAACiB,IAAI,CAAC,YAAY,EAAED,QAAQ,CAAC;AACpE,OAAO,MAAME,KAAK,GAAIF,QAAQ,IAAKhB,GAAG,CAACiB,IAAI,CAAC,cAAc,EAAED,QAAQ,CAAC;AACrE,OAAO,MAAMG,QAAQ,GAAGA,CAAA,KAAMnB,GAAG,CAACoB,GAAG,CAAC,aAAa,CAAC;;AAEpD;AACA,OAAO,MAAMC,aAAa,GAAIC,WAAW,IAAKtB,GAAG,CAACiB,IAAI,CAAC,kBAAkB,EAAEK,WAAW,CAAC;AACvF,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAMvB,GAAG,CAACoB,GAAG,CAAC,gBAAgB,CAAC;;AAE1D;AACA,OAAO,MAAMI,WAAW,GAAGA,CAAA,KAAMxB,GAAG,CAACoB,GAAG,CAAC,WAAW,CAAC;;AAErD;AACA,OAAO,MAAMK,gBAAgB,GAAGA,CAAA,KAAMzB,GAAG,CAACoB,GAAG,CAAC,gBAAgB,CAAC;AAC/D,OAAO,MAAMM,sBAAsB,GAAIC,EAAE,IAAK3B,GAAG,CAAC4B,GAAG,CAAC,kBAAkBD,EAAE,EAAE,CAAC;;AAE7E;AACA,OAAO,MAAME,aAAa,GAAIC,WAAW,IAAK9B,GAAG,CAACiB,IAAI,CAAC,WAAW,EAAEa,WAAW,CAAC;AAChF,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM/B,GAAG,CAACoB,GAAG,CAAC,WAAW,CAAC;;AAErD;AACA,OAAO,MAAMY,YAAY,GAAIC,UAAU,IAAKjC,GAAG,CAACiB,IAAI,CAAC,iBAAiB,EAAEgB,UAAU,CAAC;AACnF,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAMlC,GAAG,CAACoB,GAAG,CAAC,eAAe,CAAC;AACxD,OAAO,MAAMe,YAAY,GAAIR,EAAE,IAAK3B,GAAG,CAACoC,MAAM,CAAC,YAAYT,EAAE,EAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}