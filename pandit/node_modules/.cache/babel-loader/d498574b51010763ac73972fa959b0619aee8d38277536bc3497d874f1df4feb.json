{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\database\\\\project\\\\pandit\\\\src\\\\pages\\\\Notifications.js\",\n  _s = $RefreshSig$();\n// src/pages/Notifications.jsx\nimport React, { useEffect, useState } from 'react';\nimport { getNotifications, markNotificationAsRead } from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Notifications() {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const fetchNotifications = async () => {\n    try {\n      const res = await getNotifications();\n      setNotifications(res.data);\n    } catch (err) {\n      console.error('Error fetching notifications:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleMarkAsRead = async id => {\n    try {\n      await markNotificationAsRead(id);\n      setNotifications(prev => prev.map(n => n._id === id ? {\n        ...n,\n        read: true\n      } : n));\n    } catch (err) {\n      console.error('Failed to mark as read:', err);\n    }\n  };\n  useEffect(() => {\n    fetchNotifications();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading notifications...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No notifications available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this) : notifications.map(note => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: note.read ? 'normal' : 'bold'\n          },\n          children: note.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), !note.read && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleMarkAsRead(note._id),\n          style: {\n            marginLeft: '10px'\n          },\n          children: \"Mark as Read\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, note._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Notifications, \"b5Z8U3/R7VRYC3BVdCsp3rDTxkc=\");\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useEffect","useState","getNotifications","markNotificationAsRead","jsxDEV","_jsxDEV","Notifications","_s","notifications","setNotifications","loading","setLoading","fetchNotifications","res","data","err","console","error","handleMarkAsRead","id","prev","map","n","_id","read","children","fileName","_jsxFileName","lineNumber","columnNumber","length","note","style","fontWeight","message","onClick","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/database/project/pandit/src/pages/Notifications.js"],"sourcesContent":["// src/pages/Notifications.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getNotifications, markNotificationAsRead } from '../api/api';\r\n\r\nfunction Notifications() {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchNotifications = async () => {\r\n    try {\r\n      const res = await getNotifications();\r\n      setNotifications(res.data);\r\n    } catch (err) {\r\n      console.error('Error fetching notifications:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleMarkAsRead = async (id) => {\r\n    try {\r\n      await markNotificationAsRead(id);\r\n      setNotifications((prev) =>\r\n        prev.map((n) =>\r\n          n._id === id ? { ...n, read: true } : n\r\n        )\r\n      );\r\n    } catch (err) {\r\n      console.error('Failed to mark as read:', err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchNotifications();\r\n  }, []);\r\n\r\n  if (loading) return <p>Loading notifications...</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Notifications</h2>\r\n      <ul>\r\n        {notifications.length === 0 ? (\r\n          <li>No notifications available.</li>\r\n        ) : (\r\n          notifications.map((note) => (\r\n            <li key={note._id}>\r\n              <span style={{ fontWeight: note.read ? 'normal' : 'bold' }}>\r\n                {note.message}\r\n              </span>\r\n              {!note.read && (\r\n                <button onClick={() => handleMarkAsRead(note._id)} style={{ marginLeft: '10px' }}>\r\n                  Mark as Read\r\n                </button>\r\n              )}\r\n            </li>\r\n          ))\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notifications;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}