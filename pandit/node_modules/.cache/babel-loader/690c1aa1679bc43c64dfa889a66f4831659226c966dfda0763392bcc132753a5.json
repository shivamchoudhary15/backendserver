{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Documents\\\\project\\\\pandit\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { login } from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [form, setForm] = useState({\n    email: '',\n    password: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    try {\n      const response = await login(form);\n      const {\n        token,\n        user\n      } = response.data;\n      if (token) {\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n        alert('Login successful!');\n        navigate('/dashboard');\n      } else {\n        setError('Invalid login response');\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Login failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"email\",\n      placeholder: \"Email\",\n      type: \"email\",\n      value: form.email,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"password\",\n      placeholder: \"Password\",\n      type: \"password\",\n      value: form.password,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: loading,\n      children: loading ? 'Logging in...' : 'Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"lMvJTvKFygxbfWuR3w/RCCgs0go=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","login","jsxDEV","_jsxDEV","Login","_s","form","setForm","email","password","loading","setLoading","error","setError","navigate","handleChange","e","target","name","value","handleSubmit","preventDefault","response","token","user","data","localStorage","setItem","JSON","stringify","alert","err","_err$response","_err$response$data","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","placeholder","type","onChange","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Documents/project/pandit/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { login } from '../api/api';\r\n\r\nexport default function Login() {\r\n  const [form, setForm] = useState({ email: '', password: '' });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      const response = await login(form);\r\n      const { token, user } = response.data;\r\n\r\n      if (token) {\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        alert('Login successful!');\r\n        navigate('/dashboard');\r\n      } else {\r\n        setError('Invalid login response');\r\n      }\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || 'Login failed');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Login</h2>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n      <input\r\n        name=\"email\"\r\n        placeholder=\"Email\"\r\n        type=\"email\"\r\n        value={form.email}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <input\r\n        name=\"password\"\r\n        placeholder=\"Password\"\r\n        type=\"password\"\r\n        value={form.password}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <button type=\"submit\" disabled={loading}>\r\n        {loading ? 'Logging in...' : 'Login'}\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}